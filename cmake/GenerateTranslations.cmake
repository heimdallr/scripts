include_guard(GLOBAL)

function(GenerateTranslations)
#	set(options )
	set(oneValueArgs NAME PATH)
	set(multiValueArgs LOCALES)
	cmake_parse_arguments(ARG "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})

	set(ts)
	set(locale_names)
	list(APPEND locale_names "#pragma once\n\nnamespace HomeCompa {\n\nconstexpr const char * LOCALES[]\n{\n")
	foreach(locale ${ARG_LOCALES})
		set(ts "${ts}${ARG_PATH}/resources/locales/${locale}.ts\n")
		list(APPEND locale_names "\tQT_TRANSLATE_NOOP(\"Language\", \"${locale}\"),\n")
	endforeach()
	list(APPEND locale_names "}\;\n\n}\n")
	file(WRITE "${CMAKE_CURRENT_BINARY_DIR}/Resources/${ARG_NAME}.tslist" ${ts})
	file(WRITE "${CMAKE_CURRENT_BINARY_DIR}/Resources/${ARG_NAME}.h" ${locale_names})
	execute_process(COMMAND ${LUPDATE_TOOL} "${ARG_PATH}/src" "${CMAKE_CURRENT_BINARY_DIR}/Resources/${ARG_NAME}.h" -ts "@${CMAKE_CURRENT_BINARY_DIR}/Resources/${ARG_NAME}.tslist")

	set(qrc "<RCC>\n")
	list(APPEND qrc "\t<qresource prefix=\"resources\">\n")
	foreach(locale ${ARG_LOCALES})
		list(APPEND qrc "\t\t<file alias=\"${locale}.qm\">${locale}.qm</file>\n")
		execute_process(COMMAND ${LRELEASE_TOOL} "${ARG_PATH}/resources/locales/${locale}.ts" -qm "${CMAKE_CURRENT_BINARY_DIR}/Resources/${locale}.qm")
	endforeach()
	list(APPEND qrc "\t</qresource>\n")
	list(APPEND qrc "</RCC>\n")
	file(WRITE "${CMAKE_CURRENT_BINARY_DIR}/Resources/${ARG_NAME}.qrc" ${qrc})
endfunction()
